# -*- coding: utf-8 -*-

Plugin.create(:suumo) do
  „Ç≠„ÉÅ„Ç¨„Ç§ = "„ÅÇ‚ùóÔ∏è%{name}(@%{sn})‚ùóÔ∏èüåö„ÉÄ„É≥üí•„ÉÄ„É≥üí•„ÉÄ„É≥üí•„Ç∑„É£„Éº„É≥üé∂„Çπ„É¢üåù„Çπ„É¢üåö„Çπ„É¢üåù„Çπ„É¢üåö„Çπ„É¢ üåù„Çπ„É¢üåö„Çπ„Äú„Äú„Äú„É¢‚§¥üåù„Çπ„É¢üåö„Çπ„É¢üåù„Çπ„É¢üåö„Çπ„É¢üåù„Çπ„É¢üåö„Çπ„É¢üåù„Çπ„Äú„Äú„Äú„É¢‚§µüåû"

  command(:suumo_this_user,
          name: '„Çπ„Éº„É¢',
          condition: lambda{ |opt| opt.messages.all?(&:repliable?) },
          visible: true,
          role: :timeline) do |opt|
    opt.messages.each do |message|
      opt.widget.create_postbox(to: message,
                                footer: „Ç≠„ÉÅ„Ç¨„Ç§ % {sn: message.user.idname, name: message.user[:name]})
    end
  end

  command(:quick_suumo,
          name: ->opt{
            if defined? opt.messages.first and opt.messages.first.repliable?
              u = opt.messages.first.user
              (_("„ÅÇÔºÅ#{u[:name]}Ôºà@#{u[:idname]}ÔºâÔºÅ") % {
                 screen_name: u[:idname],
                 name: u[:name] }).gsub(/_/, '__')
            else
              '„ÇØ„Ç§„ÉÉ„ÇØ„Çπ„Éº„É¢' end },
          condition: lambda{ |opt| opt.messages.size == 1 && opt.messages.all?(&:repliable?) },
          visible: true,
          role: :timeline) do |opt|
    opt.messages.each do |message|
      message.post(message: „Ç≠„ÉÅ„Ç¨„Ç§ % {sn: message.user.idname, name: message.user[:name]})
    end
  end
end
